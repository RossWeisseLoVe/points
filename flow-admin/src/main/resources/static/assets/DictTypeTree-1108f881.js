var p=(o,r,e)=>new Promise((s,a)=>{var c=t=>{try{i(e.next(t))}catch(l){a(l)}},n=t=>{try{i(e.throw(t))}catch(l){a(l)}},i=t=>t.done?s(t.value):Promise.resolve(t.value).then(c,n);i((e=e.apply(o,r)).next())});import{_ as m}from"./index-f9546e03.js";import{g as f}from"./dicType-916f1d40.js";import{d as u,f as d,o as _,a6 as h,Z as T,_ as D,l as B}from"./vue-f7f38239.js";import{c as v}from"./index.js";import"./antd-bebda08e.js";import"./useContextMenu-b66322cd.js";const w=u({name:"DictTypeTree",components:{BasicTree:m},emits:["select"],setup(o,{emit:r}){const e=d([]);function s(){return p(this,null,function*(){e.value=yield f()})}function a(c,n){r("select",c[0])}return _(()=>{s()}),{treeData:e,handleSelect:a}}}),$={class:"bg-white mr-0 overflow-hidden"};function y(o,r,e,s,a,c){const n=h("BasicTree");return T(),D("div",$,[B(n,{title:"数据分类",toolbar:"",search:"",treeWrapperClassName:"h-[calc(100%-35px)] overflow-auto",clickRowToExpand:!1,treeData:o.treeData,onSelect:o.handleSelect},null,8,["treeData","onSelect"])])}const N=v(w,[["render",y]]);export{N as default};
